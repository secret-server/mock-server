// Code generated by go-swagger; DO NOT EDIT.

package roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
    "net/http"

    "github.com/go-openapi/runtime"

    "github.com/secret-server/mock-server/models"
)

// RolesServiceUpdatePermissionsOKCode is the HTTP code returned for type RolesServiceUpdatePermissionsOK
const RolesServiceUpdatePermissionsOKCode int = 200

/*
RolesServiceUpdatePermissionsOK Success / Fail

swagger:response rolesServiceUpdatePermissionsOK
*/
type RolesServiceUpdatePermissionsOK struct {

    /*
      In: Body
    */
    Payload *models.RolePermissionsAssignmentResponse `json:"body,omitempty"`
}

// NewRolesServiceUpdatePermissionsOK creates RolesServiceUpdatePermissionsOK with default headers values
func NewRolesServiceUpdatePermissionsOK() *RolesServiceUpdatePermissionsOK {

    return &RolesServiceUpdatePermissionsOK{}
}

// WithPayload adds the payload to the roles service update permissions o k response
func (o *RolesServiceUpdatePermissionsOK) WithPayload(payload *models.RolePermissionsAssignmentResponse) *RolesServiceUpdatePermissionsOK {
    o.Payload = payload
    return o
}

// SetPayload sets the payload to the roles service update permissions o k response
func (o *RolesServiceUpdatePermissionsOK) SetPayload(payload *models.RolePermissionsAssignmentResponse) {
    o.Payload = payload
}

// WriteResponse to the client
func (o *RolesServiceUpdatePermissionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

    rw.WriteHeader(200)
    if o.Payload != nil {
        payload := o.Payload
        if err := producer.Produce(rw, payload); err != nil {
            panic(err) // let the recovery middleware deal with this
        }
    }
}

// RolesServiceUpdatePermissionsBadRequestCode is the HTTP code returned for type RolesServiceUpdatePermissionsBadRequest
const RolesServiceUpdatePermissionsBadRequestCode int = 400

/*
RolesServiceUpdatePermissionsBadRequest Bad request

swagger:response rolesServiceUpdatePermissionsBadRequest
*/
type RolesServiceUpdatePermissionsBadRequest struct {

    /*
      In: Body
    */
    Payload *models.BadRequestResponse `json:"body,omitempty"`
}

// NewRolesServiceUpdatePermissionsBadRequest creates RolesServiceUpdatePermissionsBadRequest with default headers values
func NewRolesServiceUpdatePermissionsBadRequest() *RolesServiceUpdatePermissionsBadRequest {

    return &RolesServiceUpdatePermissionsBadRequest{}
}

// WithPayload adds the payload to the roles service update permissions bad request response
func (o *RolesServiceUpdatePermissionsBadRequest) WithPayload(payload *models.BadRequestResponse) *RolesServiceUpdatePermissionsBadRequest {
    o.Payload = payload
    return o
}

// SetPayload sets the payload to the roles service update permissions bad request response
func (o *RolesServiceUpdatePermissionsBadRequest) SetPayload(payload *models.BadRequestResponse) {
    o.Payload = payload
}

// WriteResponse to the client
func (o *RolesServiceUpdatePermissionsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

    rw.WriteHeader(400)
    if o.Payload != nil {
        payload := o.Payload
        if err := producer.Produce(rw, payload); err != nil {
            panic(err) // let the recovery middleware deal with this
        }
    }
}

// RolesServiceUpdatePermissionsForbiddenCode is the HTTP code returned for type RolesServiceUpdatePermissionsForbidden
const RolesServiceUpdatePermissionsForbiddenCode int = 403

/*
RolesServiceUpdatePermissionsForbidden Authentication failed

swagger:response rolesServiceUpdatePermissionsForbidden
*/
type RolesServiceUpdatePermissionsForbidden struct {

    /*
      In: Body
    */
    Payload *models.AuthenticationFailedResponse `json:"body,omitempty"`
}

// NewRolesServiceUpdatePermissionsForbidden creates RolesServiceUpdatePermissionsForbidden with default headers values
func NewRolesServiceUpdatePermissionsForbidden() *RolesServiceUpdatePermissionsForbidden {

    return &RolesServiceUpdatePermissionsForbidden{}
}

// WithPayload adds the payload to the roles service update permissions forbidden response
func (o *RolesServiceUpdatePermissionsForbidden) WithPayload(payload *models.AuthenticationFailedResponse) *RolesServiceUpdatePermissionsForbidden {
    o.Payload = payload
    return o
}

// SetPayload sets the payload to the roles service update permissions forbidden response
func (o *RolesServiceUpdatePermissionsForbidden) SetPayload(payload *models.AuthenticationFailedResponse) {
    o.Payload = payload
}

// WriteResponse to the client
func (o *RolesServiceUpdatePermissionsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

    rw.WriteHeader(403)
    if o.Payload != nil {
        payload := o.Payload
        if err := producer.Produce(rw, payload); err != nil {
            panic(err) // let the recovery middleware deal with this
        }
    }
}

// RolesServiceUpdatePermissionsInternalServerErrorCode is the HTTP code returned for type RolesServiceUpdatePermissionsInternalServerError
const RolesServiceUpdatePermissionsInternalServerErrorCode int = 500

/*
RolesServiceUpdatePermissionsInternalServerError Internal server error

swagger:response rolesServiceUpdatePermissionsInternalServerError
*/
type RolesServiceUpdatePermissionsInternalServerError struct {

    /*
      In: Body
    */
    Payload *models.InternalServerErrorResponse `json:"body,omitempty"`
}

// NewRolesServiceUpdatePermissionsInternalServerError creates RolesServiceUpdatePermissionsInternalServerError with default headers values
func NewRolesServiceUpdatePermissionsInternalServerError() *RolesServiceUpdatePermissionsInternalServerError {

    return &RolesServiceUpdatePermissionsInternalServerError{}
}

// WithPayload adds the payload to the roles service update permissions internal server error response
func (o *RolesServiceUpdatePermissionsInternalServerError) WithPayload(payload *models.InternalServerErrorResponse) *RolesServiceUpdatePermissionsInternalServerError {
    o.Payload = payload
    return o
}

// SetPayload sets the payload to the roles service update permissions internal server error response
func (o *RolesServiceUpdatePermissionsInternalServerError) SetPayload(payload *models.InternalServerErrorResponse) {
    o.Payload = payload
}

// WriteResponse to the client
func (o *RolesServiceUpdatePermissionsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

    rw.WriteHeader(500)
    if o.Payload != nil {
        payload := o.Payload
        if err := producer.Produce(rw, payload); err != nil {
            panic(err) // let the recovery middleware deal with this
        }
    }
}
