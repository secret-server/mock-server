// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BadRequestResponse Response object for invalid requests
//
// swagger:model BadRequestResponse
type BadRequestResponse struct {

	// Error message code
	ErrorCode string `json:"errorCode,omitempty"`

	// Error message
	// Required: true
	Message *string `json:"message"`

	// Error message detail
	MessageDetail string `json:"messageDetail,omitempty"`

	// An object describing validation errors
	ModelState interface{} `json:"modelState,omitempty"`
}

// Validate validates this bad request response
func (m *BadRequestResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BadRequestResponse) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("message", "body", m.Message); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this bad request response based on context it is used
func (m *BadRequestResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *BadRequestResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BadRequestResponse) UnmarshalBinary(b []byte) error {
	var res BadRequestResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
