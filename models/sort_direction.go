// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// SortDirection Sort direction
//
// swagger:model SortDirection
type SortDirection string

func NewSortDirection(value SortDirection) *SortDirection {
	return &value
}

// Pointer returns a pointer to a freshly-allocated SortDirection.
func (m SortDirection) Pointer() *SortDirection {
	return &m
}

const (

	// SortDirectionNone captures enum value "None"
	SortDirectionNone SortDirection = "None"

	// SortDirectionAsc captures enum value "Asc"
	SortDirectionAsc SortDirection = "Asc"

	// SortDirectionDesc captures enum value "Desc"
	SortDirectionDesc SortDirection = "Desc"
)

// for schema
var sortDirectionEnum []interface{}

func init() {
	var res []SortDirection
	if err := json.Unmarshal([]byte(`["None","Asc","Desc"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		sortDirectionEnum = append(sortDirectionEnum, v)
	}
}

func (m SortDirection) validateSortDirectionEnum(path, location string, value SortDirection) error {
	if err := validate.EnumCase(path, location, value, sortDirectionEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this sort direction
func (m SortDirection) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateSortDirectionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this sort direction based on context it is used
func (m SortDirection) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
